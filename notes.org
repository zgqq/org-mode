* Gradle
** DONE dependency resolution transitive dependencies                 :NOTE:
CLOSED: [2016-10-09 Sun 01:11]
CLOCK: [2016-10-01 Sat 23:49]--[2016-10-01 Sat 23:49] =>  0:00
** DONE compile runtime testCompile testRuntime   gradle              :NOTE:
CLOSED: [2016-10-09 Sun 01:11]
CLOCK: [2016-10-01 Sat 23:59]--[2016-10-02 Sun 00:00] =>  0:01
* Github
** DONE [#C] stars:>1000  search repository that are more than 1000 stars in github :NOTE:
CLOSED: [2016-10-08 Sat 22:49]
CLOCK: [2016-09-11 Sun 21:42]--[2016-09-11 Sun 21:43] =>  0:01
** DONE [#C] Firstly select code then insert code github.com          :NOTE:
CLOSED: [2016-10-09 Sun 01:08]
CLOCK: [2016-09-30 Fri 05:07]--[2016-09-30 Fri 05:07] =>  0:00
* Docker
** DONE [#C] RUN in the build ENTRYPOINT could  not be overrided CMD could be overrided :NOTE:
CLOSED: [2016-10-08 Sat 22:48]
CLOCK: [2016-09-11 Sun 00:17]--[2016-09-11 Sun 00:18] =>  0:01
** DONE [#C] Docker run mysql                                         :NOTE:
CLOSED: [2016-10-08 Sat 22:51]
CLOCK: [2016-09-12 Mon 13:23]--[2016-09-12 Mon 13:24] =>  0:01
#+BEGIN_SRC docker
docker run \
--detach \
--name=mysql \
--env="MYSQL_ROOT_PASSWORD=1995826" \
--publish 3306:3306 \
--volume=/root/container/mysql/conf.d:/etc/mysql/conf.d \
--volume=/storage/docker/mysql-datadir:/var/lib/mysql \
mysql
#+END_SRC
* Tmux
** DONE [#C] tmux-open  a amazing plugin for search selected content using default browser :NOTE:
CLOSED: [2016-10-08 Sat 21:39]
CLOCK: [2016-09-07 Wed 22:41]--[2016-09-07 Wed 22:43] =>  0:02

** DONE [#C] prefix +:new to create new session tmux                  :NOTE:
CLOSED: [2016-10-09 Sun 00:37]
CLOCK: [2016-09-14 Wed 19:35]--[2016-09-14 Wed 19:35] =>  0:00
** DONE [#C] bind key to reload config tmux                           :NOTE:
CLOSED: [2016-10-09 Sun 01:05]
CLOCK: [2016-09-27 Tue 20:55]--[2016-09-27 Tue 20:55] =>  0:00
# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"
* Regex
** DONE [#C] no-capturing group' with (?:regex)                       :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-28 Sun 20:29]--[2016-08-28 Sun 20:29] =>  0:00
If a complex regular expressions has several groups you might arrive at a situation 
where we use parentheses for grouping but are not the least interested in the captured string.
To discard the match of a group you can make it a 'non-capturing group' with (?:regex).
The question mark and colon tell the compiler to use the pattern for matching but not to store it.
* Go
** DONE [#C] Go pointer                                               :NOTE:
CLOSED: [2016-10-08 Sat 21:21]
CLOCK: [2016-08-28 Sun 17:13]--[2016-08-28 Sun 17:16] =>  0:03
var v Vertex
fmt.Println(v.Abs()) // OK
p := &v
fmt.Println(p.Abs()) // OK
In this case, the method call p.Abs() is interpreted as (*p).Abs(). 

** DONE [#C] interface{} is similar to Object in java      golang     :NOTE:
CLOSED: [2016-10-08 Sat 21:21]
CLOCK: [2016-08-28 Sun 17:44]--[2016-08-28 Sun 17:45] =>  0:01
** DONE [#C] switch i.(type) { case string: }  is similar to instanceof in java  golang :NOTE:
CLOSED: [2016-10-08 Sat 21:21]
CLOCK: [2016-08-28 Sun 17:47]--[2016-08-28 Sun 17:48] =>  0:01

** DONE [#C] :=  declares variable golang                             :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-29 Mon 11:32]--[2016-08-29 Mon 11:33] =>  0:01

** DONE [#C] defer is similar to finally in java golang               :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-29 Mon 14:30]--[2016-08-29 Mon 14:30] =>  0:00
** DONE [#C] So basically only functions / variables starting with a capital letter would be usable outside the package.                                                    go :NOTE:
CLOSED: [2016-10-09 Sun 00:41]
CLOCK: [2016-09-15 Thu 09:14]--[2016-09-15 Thu 09:14] =>  0:00
** DONE [#C] Go regex example                                         :NOTE:
CLOSED: [2016-10-09 Sun 00:42]
CLOCK: [2016-09-15 Thu 16:00]--[2016-09-15 Thu 16:01] =>  0:01
`(?si)本月使用流量.*?<td.*?colspan=5>.*?(\d+).*?（MB）.*?<`
** DONE [#C] Go time date format                                      :NOTE:
CLOSED: [2016-10-09 Sun 00:42]
CLOCK: [2016-09-15 Thu 16:31]--[2016-09-15 Thu 16:32] =>  0:01
http://stackoverflow.com/questions/33119748/golang-convert-time-time-to-string
#+BEGIN_SRC go
    //Must use 2006 01 02
    fmt.Println("origin : ", current.String())
    // origin :  2016-09-02 15:53:07.159994437 +0800 CST

    fmt.Println("mm-dd-yyyy : ", current.Format("01-02-2006"))
    // mm-dd-yyyy :  09-02-2016

    fmt.Println("yyyy-mm-dd : ", current.Format("2006-01-02"))
    // yyyy-mm-dd :  2016-09-02

    // separated by .
    fmt.Println("yyyy.mm.dd : ", current.Format("2006.01.02"))
    // yyyy.mm.dd :  2016.09.02

    fmt.Println("yyyy-mm-dd HH:mm:ss : ", current.Format("2006-01-02 15:04:05"))
    // yyyy-mm-dd HH:mm:ss :  2016-09-02 15:53:07

    // StampMicro
    fmt.Println("yyyy-mm-dd HH:mm:ss: ", current.Format("2006-01-02 15:04:05.000000"))
    // yyyy-mm-dd HH:mm:ss:  2016-09-02 15:53:07.159994
#+END_SRC
** DONE [#C] Int to string go                                         :NOTE:
CLOSED: [2016-10-09 Sun 00:42]
CLOCK: [2016-09-15 Thu 16:36]--[2016-09-15 Thu 16:36] =>  0:00
strconv.Itoa(123)
** DONE const tricks golang                                           :NOTE:
CLOSED: [2016-10-09 Sun 01:13]
CLOCK: [2016-10-06 Thu 08:18]--[2016-10-06 Thu 08:18] =>  0:00
type ExportStrategy int

const (
	ExportTranslation = 1 << iota
	ExportExplains
	ExportQueryCount
)
** DONE Improving test in neovim                                  :VIM:NOTE:
CLOSED: [2016-10-09 Sun 01:14]
CLOCK: [2016-10-07 Fri 08:16]--[2016-10-07 Fri 08:17] =>  0:01
if has("nvim")
    let g:go_term_enabled = 1
endif
* Mess
** DONE [#C] rg instead of 如果 zmb instead of 怎么办                 :NOTE:
CLOSED: [2016-10-08 Sat 20:50]
CLOCK: [2016-08-26 Fri 20:29]--[2016-08-26 Fri 20:29] =>  0:00
** DONE [#C] fx instead of faxian 发现                                :NOTE:
CLOSED: [2016-10-08 Sat 20:51]
CLOCK: [2016-08-26 Fri 20:54]--[2016-08-26 Fri 20:54] =>  0:00
** DONE [#C] xjb  instead of 性价比                                   :NOTE:
CLOSED: [2016-10-08 Sat 21:03]
CLOCK: [2016-08-27 Sat 22:30]--[2016-08-27 Sat 22:31] =>  0:01
** DONE [#C] gem command is included in ruby package                  :NOTE:
CLOSED: [2016-10-08 Sat 21:31]
CLOCK: [2016-08-31 Wed 11:00]--[2016-08-31 Wed 11:00] =>  0:00
** DONE [#C] wakatime record work time                                :NOTE:
CLOSED: [2016-10-08 Sat 21:35]
CLOCK: [2016-09-06 Tue 22:34]--[2016-09-06 Tue 22:35] =>  0:01
https://wakatime.com/help/plugins/vim
** DONE [#C] http://www.lintcode.com/en/problem/                      :NOTE:
CLOSED: [2016-10-08 Sat 21:37]
CLOCK: [2016-09-06 Tue 22:45]--[2016-09-06 Tue 22:45] =>  0:00
maybe lintcode is better than leetcode
** DONE [#C] What is the difference between utf-8 and unicode         :NOTE:
CLOSED: [2016-10-09 Sun 00:44]
CLOCK: [2016-09-16 Fri 21:43]--[2016-09-16 Fri 21:45] =>  0:02
unicode is map
utf-8 is a transfer implement
Unicode符号范围 | UTF-8编码方式

(十六进制) | （二进制）
—————————————————————–
0000 0000-0000 007F | 0xxxxxxx
0000 0080-0000 07FF | 110xxxxx 10xxxxxx
0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
https://www.zhihu.com/question/23374078
** DONE [#C] LAN local area network                                   :NOTE:
CLOSED: [2016-10-09 Sun 00:45]
CLOCK: [2016-09-19 Mon 12:46]--[2016-09-19 Mon 12:46] =>  0:00
* C
** DONE [#C] void* is similar to Object of java                       :NOTE:
CLOSED: [2016-10-08 Sat 19:11]
CLOCK: [2016-08-24 Wed 16:32]--[2016-08-24 Wed 16:32] =>  0:00

** DONE [#C] const char * name="zgq";  error: *name="change" correct:name="dd  char* const name="zgq" error:name="change" :NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 17:11]--[2016-08-24 Wed 17:11] =>  0:00
CLOCK: [2016-08-24 Wed 17:08]--[2016-08-24 Wed 17:09] =>  0:01
CLOCK: [2016-08-24 Wed 16:42]--[2016-08-24 Wed 17:08] =>  0:26

* Browser
** DONE [#C] i to enter Ignore Mode in vimfx                          :NOTE:
CLOSED: [2016-10-08 Sat 14:33]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:33]
CLOCK: [2016-07-26 Tue 10:42]--[2016-07-26 Tue 10:43] =>  0:01
** DONE [#C] The /etc/fstab file can be used to define how disk partitions, various other block devices, or remote filesystems should be mounted into the filesystem. :NOTE:
CLOSED: [2016-10-08 Sat 14:33]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:33]
CLOCK: [2016-07-26 Tue 14:18]--[2016-07-26 Tue 14:19] =>  0:01
** DONE [#C] Using keysnail                                           :NOTE:
CLOSED: [2016-10-08 Sat 15:00]
CLOCK: [2016-08-02 Tue 15:33]--[2016-08-02 Tue 15:34] =>  0:01
** DONE [#C] press / in help page to search shortcut                  :NOTE:
CLOSED: [2016-10-08 Sat 15:01]
CLOCK: [2016-08-03 Wed 09:33]--[2016-08-03 Wed 09:33] =>  0:00
** DONE [#C] F  to open a link new newly created tab                  :NOTE:
CLOSED: [2016-10-08 Sat 15:01]
CLOCK: [2016-08-03 Wed 09:33]--[2016-08-03 Wed 09:34] =>  0:01
** DONE [#C] ? to show help dialog                                    :NOTE:
CLOSED: [2016-10-08 Sat 15:04]
CLOCK: [2016-08-04 Thu 12:32]--[2016-08-04 Thu 12:33] =>  0:01
** DONE [#C] Using ] to go next page vimfx                            :NOTE:
CLOSED: [2016-10-08 Sat 15:36]
CLOCK: [2016-08-23 Tue 14:00]--[2016-08-23 Tue 14:00] =>  0:00
** DONE [#C] C-S-y  go download page firefox                          :NOTE:
CLOSED: [2016-10-08 Sat 20:35]
CLOCK: [2016-08-25 Thu 16:32]--[2016-08-25 Thu 16:33] =>  0:01
** DONE [#C] yy insteads of C-l C-w  in firefox                       :NOTE:
CLOSED: [2016-10-08 Sat 20:36]
CLOCK: [2016-08-25 Thu 18:38]--[2016-08-25 Thu 18:38] =>  0:00
** DONE [#C] gx$ close right tabs                                     :NOTE:
CLOSED: [2016-10-08 Sat 22:49]
CLOCK: [2016-09-11 Sun 20:57]--[2016-09-11 Sun 20:57] =>  0:00
** DONE [#C] Disable Prefix Argument Keys keysnail                    :NOTE:
CLOSED: [2016-10-09 Sun 01:08]
CLOCK: [2016-09-30 Fri 06:37]--[2016-09-30 Fri 06:37] =>  0:00
* Window manager
** DONE [#C] Hide border                               :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 14:16]
CLOCK: [2016-07-22 Fri 21:39]--[2016-07-22 Fri 21:40] =>  0:01
** DONE [#C] Hide bar then press modifer to show it    :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 14:16]
** DONE [#C] Back and forth                            :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 14:17]
** DONE [#C] Automatic back-and-forth when switching to the current workspace :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 19:33]
CLOCK: [2016-08-25 Thu 13:12]--[2016-08-25 Thu 13:12] =>  0:00
For instance: Assume you are on workspace "1: www" and switch to "2: IM" using mod+2 because somebody sent you a message. You don’t need to remember where you came from now, you can just press $mod+2 again to switch back to "1: www".
** DONE [#C] $mod+Shift+num move window to workspace                  :NOTE:
CLOSED: [2016-10-08 Sat 20:51]
CLOCK: [2016-08-26 Fri 21:14]--[2016-08-26 Fri 21:14] =>  0:00

** DONE [#C] assign [class="idea"] → 4   let window of idea to move to workspace 4 i3 :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 20:51]
CLOCK: [2016-08-26 Fri 21:35]--[2016-08-26 Fri 21:36] =>  0:01
** DONE [#C] $mod+enter to launch terminal             :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 20:52]
CLOCK: [2016-08-26 Fri 21:40]--[2016-08-26 Fri 21:41] =>  0:01
** DONE [#C] Using i3 layout                                          :NOTE:
CLOSED: [2016-10-09 Sun 00:45]
CLOCK: [2016-09-18 Sun 00:12]--[2016-09-18 Sun 00:13] =>  0:01
* Learn method
** DONE [#C] using other word to express as one word be used many times,you can google or baidu for new word :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-17 Sun 22:11]--[2016-07-17 Sun 22:12] =>  0:01
** DONE [#C] record all things you think                              :NOTE:
CLOSED: [2016-10-08 Sat 15:08]
CLOCK: [2016-08-05 Fri 23:02]--[2016-08-05 Fri 23:04] =>  0:02
** DONE [#C] Why english is so important?                             :NOTE:
CLOSED: [2016-10-08 Sat 19:15]
CLOCK: [2016-08-25 Thu 09:39]--[2016-08-25 Thu 09:45] =>  0:06
As a developer,it is neccessary to have awesome skill of reading and writing english as we need to communicate with foreigner.
** DONE [#C] Don't use lib                                            :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-28 Sun 22:17]--[2016-08-28 Sun 22:18] =>  0:01

** DONE [#C] Don't close door and make own car                        :NOTE:
CLOSED: [2016-10-08 Sat 21:40]
CLOCK: [2016-09-08 Thu 16:22]--[2016-09-08 Thu 16:22] =>  0:00
** DONE [#C] Record the regex that i don't how to write.              :NOTE:
CLOSED: [2016-10-08 Sat 22:50]
CLOCK: [2016-09-12 Mon 11:25]--[2016-09-12 Mon 11:25] =>  0:00
** DONE [#C] Learning what is common                                  :NOTE:
CLOSED: [2016-10-09 Sun 00:46]
CLOCK: [2016-09-19 Mon 22:04]--[2016-09-19 Mon 22:10] =>  0:06
What is common?This is a great problem,as you known,there are a sea of knowledage of computer science.
we will face some common problems such as encode when learning lots of program languages,therefore,those problem 
is common,we need to pay more attention to it.

* Debug
** Conditional breakpoint                                             :NOTE:
CLOCK: [2016-07-15 Fri 21:40]--[2016-07-15 Fri 21:41] =>  0:01
* Emacs
** DONE Using intern convert string to symbol                         :NOTE:
CLOSED: [2016-09-30 Fri 07:53]
** DONE C-\ switch to input method  in  emacs                         :NOTE:
CLOSED: [2016-10-08 Sat 01:36]
CLOCK: [2016-07-11 Mon 11:54]--[2016-07-11 Mon 11:55] =>  0:01
** DONE Copy region or line using avy                                 :NOTE:
CLOSED: [2016-10-08 Sat 01:46]
CLOCK: [2016-07-15 Fri 10:53]--[2016-07-15 Fri 10:54] =>  0:01
** DONE [#C] Goto line  ace-jump                                      :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
** DONE [#C] Ace link (plugin) emacs                                  :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
** DONE [#C] tuple is similar to array                                :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-17 Sun 22:08]--[2016-07-17 Sun 22:10] =>  0:02
** DONE [#C]  Using C-m represent RET in multiple cursors mode
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
            :NOTE:
CLOCK: [2016-07-17 Sun 22:36]--[2016-07-17 Sun 22:37] =>  0:01
** DONE [#C] ace-jump-buffer emace plugin                             :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-17 Sun 22:46]--[2016-07-17 Sun 22:47] =>  0:01
** DONE [#C] c-x c-c exit emacs                                :EDITOR:NOTE:
CLOSED: [2016-10-08 Sat 15:11]
CLOCK: [2016-08-07 Sun 15:31]--[2016-08-07 Sun 15:31] =>  0:00
** DONE [#C] Using hook                                               :NOTE:
CLOSED: [2016-10-09 Sun 01:07]
CLOCK: [2016-09-29 Thu 19:45]--[2016-09-29 Thu 19:49] =>  0:04
** DONE [#C] C-M-k to kill expression   emacs                         :NOTE:
CLOSED: [2016-10-09 Sun 01:07]
CLOCK: [2016-09-29 Thu 21:26]--[2016-09-29 Thu 21:27] =>  0:01
* Intellij IDEA
** DONE Alt+9 show tool window for version control 			       :NOTE:								       CLOCK: [2016-07-07 Thu 09:15]--[2016-07-07 Thu 09:17] =>  0:02
CLOSED: [2016-09-30 Fri 07:53]
** DONE Ctrl+shift+enter complete brace in idea                       :NOTE:
CLOSED: [2016-09-30 Fri 08:09]
								       CLOCK: [2016-07-07 Thu 13:44]--[2016-07-07 Thu 13:52] =>  0:08

** DONE [#C] https://blog.jetbrains.com/idea/2006/07/surround-with/
CLOSED: [2016-09-30 Fri 08:10]
 [2016-07-08 Fri 12:52]
** DONE [#C] http://idea.lanyus.com/ active idea                      :NOTE:
CLOSED: [2016-10-08 Sat 15:22]
CLOCK: [2016-08-08 Mon 16:16]--[2016-08-08 Mon 16:17] =>  0:01
** DONE [#C] alt+1 close project view                    :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 15:23]
CLOCK: [2016-08-08 Mon 16:25]--[2016-08-08 Mon 16:26] =>  0:01
** DONE [#C] vnoremap <Space>na :<C-u>action NewClass<CR>  mapping command in visual mode :NOTE:
CLOSED: [2016-10-08 Sat 15:23]
CLOCK: [2016-08-08 Mon 18:11]--[2016-08-08 Mon 18:12] =>  0:01
CLOCK: [2016-08-08 Mon 17:33]--[2016-08-08 Mon 18:07] =>  0:34
CLOCK: [2016-08-08 Mon 17:25]--[2016-08-08 Mon 17:33] =>  0:08
** DONE [#C] Live template of interllij  sout for System.out.println  :NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 20:29]--[2016-08-24 Wed 20:30] =>  0:01
** DONE [#C] Alt+enter to fix bug quickly                :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 23:22]--[2016-08-24 Wed 23:22] =>  0:00
** DONE [#C] alt+; to comment line                       :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 23:28]--[2016-08-24 Wed 23:29] =>  0:01
** DONE [#C] instead of input of if(isPrefix){ , input isPrefix.if posfix completion :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-24 Wed 23:34]--[2016-08-24 Wed 23:35] =>  0:01
** DONE [#C] Extract variable idea will execute refactor action at cusor location :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-24 Wed 23:48]--[2016-08-24 Wed 23:52] =>  0:04
** DONE [#C] Go to definition                            :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-24 Wed 23:57]--[2016-08-24 Wed 23:57] =>  0:00
** DONE [#C] S-RET  move cursor to next line             :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-25 Thu 00:13]--[2016-08-25 Thu 00:14] =>  0:01
** DONE [#C] OptimizeImports                             :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:15]
CLOCK: [2016-08-25 Thu 10:04]--[2016-08-25 Thu 10:04] =>  0:00
** DONE [#C] ShowProjectStructureSettings           :INTELLIJIDEA:JAVA:NOTE:
CLOSED: [2016-10-08 Sat 19:16]
CLOCK: [2016-08-25 Thu 10:30]--[2016-08-25 Thu 10:31] =>  0:01
** DONE [#C] Navigate class                              :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:27]
CLOCK: [2016-08-25 Thu 12:45]--[2016-08-25 Thu 12:46] =>  0:01
** DONE [#C] robot.return instead of return robot;       :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 20:35]
CLOCK: [2016-08-25 Thu 15:17]--[2016-08-25 Thu 15:17] =>  0:00
** DONE [#C] Extract method                              :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 20:35]
CLOCK: [2016-08-25 Thu 16:29]--[2016-08-25 Thu 16:29] =>  0:00
** DONE [#C] psf instead of public static final          :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 20:37]
CLOCK: [2016-08-25 Thu 20:23]--[2016-08-25 Thu 20:24] =>  0:01
** DONE [#C] Using / to find method  is faster           :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 21:35]
CLOCK: [2016-09-06 Tue 21:43]--[2016-09-06 Tue 21:43] =>  0:00
** DONE l.a could match list.add method       idea       :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-09 Sun 01:09]
CLOCK: [2016-10-01 Sat 18:15]--[2016-10-01 Sat 18:16] =>  0:01
* Org-mode
** DONE Using [0%] to statistics development                          :NOTE:
CLOSED: [2016-09-29 Thu 07:44]
   CLOCK: [2016-07-01 Fri 23:44]--[2016-07-01 Fri 23:46] =>  0:02
   Locate cursor to [%] ,then press ctrl+c ctrl+c to update progress.
** DONE [#C] alt+enter  to create new item  of sequence in org-mode   :NOTE:
CLOSED: [2016-10-08 Sat 15:32]
CLOCK: [2016-08-21 Sun 18:39]--[2016-08-21 Sun 18:41] =>  0:02
** DONE [#C] t instead of c-c c-t in org-agenda-mode                  :NOTE:
CLOSED: [2016-10-08 Sat 22:48]
CLOCK: [2016-09-11 Sun 15:20]--[2016-09-11 Sun 15:20] =>  0:00
** DONE [#C] org-todo-list to show global todo list  org-mode         :NOTE:
CLOSED: [2016-10-09 Sun 00:43]
CLOCK: [2016-09-16 Fri 14:20]--[2016-09-16 Fri 14:20] =>  0:00
** DONE [#C] C-c a t instead of org-todo-list                         :NOTE:
CLOSED: [2016-10-09 Sun 00:43]
CLOCK: [2016-09-16 Fri 14:39]--[2016-09-16 Fri 14:39] =>  0:00
** DONE [#C] org mode @ to take a note ! take a time                  :NOTE:
CLOSED: [2016-10-09 Sun 00:50]
CLOCK: [2016-09-24 Sat 19:32]--[2016-09-24 Sat 19:42] =>  0:10
** DONE [#C] c-c c-n go to next heading c-c c-p go to  previous heading :ORG-MODE:NOTE:
CLOSED: [2016-10-09 Sun 00:51]
CLOCK: [2016-09-25 Sun 00:18]--[2016-09-25 Sun 00:19] =>  0:01
* Editor
** DONE Jump to definition                                            :NOTE:
CLOSED: [2016-10-08 Sat 01:41]
CLOCK: [2016-07-14 Thu 14:17]--[2016-07-14 Thu 14:18] =>  0:01
** DONE Format code                                                   :NOTE:
CLOSED: [2016-10-08 Sat 01:43]
CLOCK: [2016-07-14 Thu 14:21]--[2016-07-14 Thu 14:22] =>  0:01
** DONE Open a new line up or down                                    :NOTE:
CLOSED: [2016-10-08 Sat 01:44]
** Quick fix                                                          :NOTE:
CLOCK: [2016-07-15 Fri 12:07]--[2016-07-15 Fri 12:08] =>  0:01
** DONE [#C] Optimize import                                          :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
** DONE [#C] Using search nagivate rather than having page down util you see it. :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-20 Wed 20:56]--[2016-07-20 Wed 20:57] =>  0:01
** DONE [#C] To adjust indent pressing tab                     :EDITOR:NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-21 Thu 18:38]--[2016-07-21 Thu 18:41] =>  0:03
** DONE [#C] Insert space   to reduce candidate          :INTEllIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 14:15]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:15]
CLOCK: [2016-07-21 Thu 23:02]--[2016-07-21 Thu 23:07] =>  0:05
** DONE [#C] Using tag  to search function definition because directly searching source will result in a number of usage of the function found :NOTE:
CLOSED: [2016-10-08 Sat 15:22]
CLOCK: [2016-08-08 Mon 10:39]--[2016-08-08 Mon 10:40] =>  0:01
** DONE [#C] Using tab instead of C-d or C-backspace to align code :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 15:29]
** DONE [#C] generally speaking enter is for confirm in common program. :NOTE:
CLOSED: [2016-10-08 Sat 15:30]
CLOCK: [2016-08-08 Mon 21:11]--[2016-08-08 Mon 21:11] =>  0:00
** DONE [#C] firefox certificate fix try to delete cert8.db   :PROBLEM:NOTE:
CLOSED: [2016-10-08 Sat 15:31]
CLOCK: [2016-08-09 Tue 21:03]--[2016-08-09 Tue 21:04] =>  0:01
** DONE [#C] Ctrl+s is better than pressing alt+b or alt+f many times repeatly :EDITOR:NOTE:
CLOSED: [2016-10-08 Sat 15:32]
CLOCK: [2016-08-10 Wed 09:33]--[2016-08-10 Wed 09:35] =>  0:02

* Git
** DONE When Git clone, network problem is main one of factors occuring error of packet_write_wait broken pipe :NOTE:
CLOSED: [2016-09-30 Fri 08:20]
CLOCK: [2016-07-08 Fri 20:23]--[2016-07-08 Fri 20:27] =>  0:04

* Python
** DONE u prior to str is equals to str.decode("unicode-escape")      :NOTE:
CLOSED: [2016-10-08 Sat 01:46]
CLOCK: [2016-07-15 Fri 00:03]--[2016-07-15 Fri 00:04] =>  0:01
* English
** DONE pepetuate 报持 长久的                                         :NOTE:
CLOSED: [2016-09-30 Fri 07:52]
   CLOCK: [2016-07-04 Mon 17:19]--[2016-07-04 Mon 17:22] =>  0:03
** DONE gigantic 巨大的                                               :NOTE:
CLOSED: [2016-09-30 Fri 07:52]
   CLOCK: [2016-07-04 Mon 17:23]--[2016-07-04 Mon 17:24] =>  0:01
** DONE [#C] As 做原因状语,主要用来解释                               :NOTE:
CLOSED: [2016-10-08 Sat 14:13]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:13]
Note: Hard links are only valid within the same File System. Symbolic links can span file systems as they are simply the name of another file.
CLOCK: [2016-07-18 Mon 22:42]--[2016-07-18 Mon 22:43] =>  0:01
** DONE [#C] for作目的状语 后接名词 For more advanced requirements    :NOTE:
CLOSED: [2016-10-08 Sat 14:13]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:13]
CLOCK: [2016-07-19 Tue 10:40]--[2016-07-19 Tue 10:41] =>  0:01
** DONE [#C] incarnation 化身                                         :NOTE:
CLOSED: [2016-10-08 Sat 14:17]
** DONE [#C] dating from 自从什么时候                                  :NOTE:
CLOSED: [2016-10-08 Sat 14:22]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:22]
CLOCK: [2016-07-24 Sun 08:54]--[2016-07-24 Sun 08:55] =>  0:01
** DONE [#C] We use across to emphasise that something is happening at the same time in many places, e.g. within an organisation, a city or a country :NOTE:
CLOSED: [2016-10-08 Sat 21:34]
CLOCK: [2016-09-06 Tue 15:27]--[2016-09-06 Tue 15:28] =>  0:01
    She’s opened coffee shops across the city and they’re very successful.
    Across the country, people are coming out to vote for a new president.                                                       
** DONE [#C] while   have mean of at  the same time                   :NOTE:
CLOSED: [2016-10-08 Sat 21:40]
CLOCK: [2016-09-08 Thu 16:17]--[2016-09-08 Thu 16:18] =>  0:01
** DONE [#C] those of you who 那些                                    :NOTE:
CLOSED: [2016-10-08 Sat 21:41]
CLOCK: [2016-09-08 Thu 21:46]--[2016-09-08 Thu 21:47] =>  0:01
Those of you who have experience running services in production know that usually apps nowadays are not that simple.
** DONE [#C] for 目的                                                 :NOTE:
CLOSED: [2016-10-08 Sat 22:49]
CLOCK: [2016-09-11 Sun 20:36]--[2016-09-11 Sun 20:37] =>  0:01
depart for Japan
** DONE [#C] or 否则                                                  :NOTE:
CLOSED: [2016-10-09 Sun 01:04]
CLOCK: [2016-09-26 Mon 19:31]--[2016-09-26 Mon 19:32] =>  0:01
do not make the critical mistake of specifying only :<remote-branch-name> (with the colon), or the remote branch will be deleted!

* Quick notes
** M-! to input shell command emacs                                    :NOTE:
CLOCK: [2016-10-09 Sun 02:25]--[2016-10-09 Sun 02:25] =>  0:00
