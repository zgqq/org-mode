* Gradle
** DONE dependency resolution transitive dependencies                 :NOTE:
CLOSED: [2016-10-09 Sun 01:11]
CLOCK: [2016-10-01 Sat 23:49]--[2016-10-01 Sat 23:49] =>  0:00
** DONE compile runtime testCompile testRuntime   gradle              :NOTE:
CLOSED: [2016-10-09 Sun 01:11]
CLOCK: [2016-10-01 Sat 23:59]--[2016-10-02 Sun 00:00] =>  0:01
* Github
** DONE [#C] stars:>1000  search repository that are more than 1000 stars in github :NOTE:
CLOSED: [2016-10-08 Sat 22:49]
CLOCK: [2016-09-11 Sun 21:42]--[2016-09-11 Sun 21:43] =>  0:01
** DONE [#C] Firstly select code then insert code github.com          :NOTE:
CLOSED: [2016-10-09 Sun 01:08]
CLOCK: [2016-09-30 Fri 05:07]--[2016-09-30 Fri 05:07] =>  0:00
* Docker
** DONE [#C] RUN in the build ENTRYPOINT could  not be overrided CMD could be overrided :NOTE:
CLOSED: [2016-10-08 Sat 22:48]
CLOCK: [2016-09-11 Sun 00:17]--[2016-09-11 Sun 00:18] =>  0:01
** DONE [#C] Docker run mysql                                         :NOTE:
CLOSED: [2016-10-08 Sat 22:51]
CLOCK: [2016-09-12 Mon 13:23]--[2016-09-12 Mon 13:24] =>  0:01
#+BEGIN_SRC docker
docker run \
--detach \
--name=mysql \
--env="MYSQL_ROOT_PASSWORD=1995826" \
--publish 3306:3306 \
--volume=/root/container/mysql/conf.d:/etc/mysql/conf.d \
--volume=/storage/docker/mysql-datadir:/var/lib/mysql \
mysql
#+END_SRC
* Tmux
** DONE [#C] tmux-open  a amazing plugin for search selected content using default browser :NOTE:
CLOSED: [2016-10-08 Sat 21:39]
CLOCK: [2016-09-07 Wed 22:41]--[2016-09-07 Wed 22:43] =>  0:02

** DONE [#C] prefix +:new to create new session tmux                  :NOTE:
CLOSED: [2016-10-09 Sun 00:37]
CLOCK: [2016-09-14 Wed 19:35]--[2016-09-14 Wed 19:35] =>  0:00
** DONE [#C] bind key to reload config tmux                           :NOTE:
CLOSED: [2016-10-09 Sun 01:05]
CLOCK: [2016-09-27 Tue 20:55]--[2016-09-27 Tue 20:55] =>  0:00
# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"
* Regex
** DONE [#C] no-capturing group' with (?:regex)                       :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-28 Sun 20:29]--[2016-08-28 Sun 20:29] =>  0:00
If a complex regular expressions has several groups you might arrive at a situation 
where we use parentheses for grouping but are not the least interested in the captured string.
To discard the match of a group you can make it a 'non-capturing group' with (?:regex).
The question mark and colon tell the compiler to use the pattern for matching but not to store it.
* Go
** DONE [#C] Go pointer                                               :NOTE:
CLOSED: [2016-10-08 Sat 21:21]
CLOCK: [2016-08-28 Sun 17:13]--[2016-08-28 Sun 17:16] =>  0:03
var v Vertex
fmt.Println(v.Abs()) // OK
p := &v
fmt.Println(p.Abs()) // OK
In this case, the method call p.Abs() is interpreted as (*p).Abs(). 

** DONE [#C] interface{} is similar to Object in java      golang     :NOTE:
CLOSED: [2016-10-08 Sat 21:21]
CLOCK: [2016-08-28 Sun 17:44]--[2016-08-28 Sun 17:45] =>  0:01
** DONE [#C] switch i.(type) { case string: }  is similar to instanceof in java  golang :NOTE:
CLOSED: [2016-10-08 Sat 21:21]
CLOCK: [2016-08-28 Sun 17:47]--[2016-08-28 Sun 17:48] =>  0:01

** DONE [#C] :=  declares variable golang                             :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-29 Mon 11:32]--[2016-08-29 Mon 11:33] =>  0:01

** DONE [#C] defer is similar to finally in java golang               :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-29 Mon 14:30]--[2016-08-29 Mon 14:30] =>  0:00
** DONE [#C] So basically only functions / variables starting with a capital letter would be usable outside the package.                                                    go :NOTE:
CLOSED: [2016-10-09 Sun 00:41]
CLOCK: [2016-09-15 Thu 09:14]--[2016-09-15 Thu 09:14] =>  0:00
** DONE [#C] Go regex example                                         :NOTE:
CLOSED: [2016-10-09 Sun 00:42]
CLOCK: [2016-09-15 Thu 16:00]--[2016-09-15 Thu 16:01] =>  0:01
`(?si)本月使用流量.*?<td.*?colspan=5>.*?(\d+).*?（MB）.*?<`
** DONE [#C] Go time date format                                      :NOTE:
CLOSED: [2016-10-09 Sun 00:42]
CLOCK: [2016-09-15 Thu 16:31]--[2016-09-15 Thu 16:32] =>  0:01
http://stackoverflow.com/questions/33119748/golang-convert-time-time-to-string
#+BEGIN_SRC go
    //Must use 2006 01 02
    fmt.Println("origin : ", current.String())
    // origin :  2016-09-02 15:53:07.159994437 +0800 CST

    fmt.Println("mm-dd-yyyy : ", current.Format("01-02-2006"))
    // mm-dd-yyyy :  09-02-2016

    fmt.Println("yyyy-mm-dd : ", current.Format("2006-01-02"))
    // yyyy-mm-dd :  2016-09-02

    // separated by .
    fmt.Println("yyyy.mm.dd : ", current.Format("2006.01.02"))
    // yyyy.mm.dd :  2016.09.02

    fmt.Println("yyyy-mm-dd HH:mm:ss : ", current.Format("2006-01-02 15:04:05"))
    // yyyy-mm-dd HH:mm:ss :  2016-09-02 15:53:07

    // StampMicro
    fmt.Println("yyyy-mm-dd HH:mm:ss: ", current.Format("2006-01-02 15:04:05.000000"))
    // yyyy-mm-dd HH:mm:ss:  2016-09-02 15:53:07.159994
#+END_SRC
** DONE [#C] Int to string go                                         :NOTE:
CLOSED: [2016-10-09 Sun 00:42]
CLOCK: [2016-09-15 Thu 16:36]--[2016-09-15 Thu 16:36] =>  0:00
strconv.Itoa(123)
** DONE const tricks golang                                           :NOTE:
CLOSED: [2016-10-09 Sun 01:13]
CLOCK: [2016-10-06 Thu 08:18]--[2016-10-06 Thu 08:18] =>  0:00
type ExportStrategy int

const (
	ExportTranslation = 1 << iota
	ExportExplains
	ExportQueryCount
)
** DONE Improving test in neovim                                  :VIM:NOTE:
CLOSED: [2016-10-09 Sun 01:14]
CLOCK: [2016-10-07 Fri 08:16]--[2016-10-07 Fri 08:17] =>  0:01
if has("nvim")
    let g:go_term_enabled = 1
endif
* Mess
** DONE [#C] rg instead of 如果 zmb instead of 怎么办                 :NOTE:
CLOSED: [2016-10-08 Sat 20:50]
CLOCK: [2016-08-26 Fri 20:29]--[2016-08-26 Fri 20:29] =>  0:00
** DONE [#C] fx instead of faxian 发现                                :NOTE:
CLOSED: [2016-10-08 Sat 20:51]
CLOCK: [2016-08-26 Fri 20:54]--[2016-08-26 Fri 20:54] =>  0:00
** DONE [#C] xjb  instead of 性价比                                   :NOTE:
CLOSED: [2016-10-08 Sat 21:03]
CLOCK: [2016-08-27 Sat 22:30]--[2016-08-27 Sat 22:31] =>  0:01
** DONE [#C] gem command is included in ruby package                  :NOTE:
CLOSED: [2016-10-08 Sat 21:31]
CLOCK: [2016-08-31 Wed 11:00]--[2016-08-31 Wed 11:00] =>  0:00
** DONE [#C] wakatime record work time                                :NOTE:
CLOSED: [2016-10-08 Sat 21:35]
CLOCK: [2016-09-06 Tue 22:34]--[2016-09-06 Tue 22:35] =>  0:01
https://wakatime.com/help/plugins/vim
** DONE [#C] http://www.lintcode.com/en/problem/                      :NOTE:
CLOSED: [2016-10-08 Sat 21:37]
CLOCK: [2016-09-06 Tue 22:45]--[2016-09-06 Tue 22:45] =>  0:00
maybe lintcode is better than leetcode
** DONE [#C] What is the difference between utf-8 and unicode         :NOTE:
CLOSED: [2016-10-09 Sun 00:44]
CLOCK: [2016-09-16 Fri 21:43]--[2016-09-16 Fri 21:45] =>  0:02
unicode is map
utf-8 is a transfer implement
Unicode符号范围 | UTF-8编码方式

(十六进制) | （二进制）
—————————————————————–
0000 0000-0000 007F | 0xxxxxxx
0000 0080-0000 07FF | 110xxxxx 10xxxxxx
0000 0800-0000 FFFF | 1110xxxx 10xxxxxx 10xxxxxx
0001 0000-0010 FFFF | 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx
https://www.zhihu.com/question/23374078
** DONE [#C] LAN local area network                                   :NOTE:
CLOSED: [2016-10-09 Sun 00:45]
CLOCK: [2016-09-19 Mon 12:46]--[2016-09-19 Mon 12:46] =>  0:00
* C
** DONE [#C] void* is similar to Object of java                       :NOTE:
CLOSED: [2016-10-08 Sat 19:11]
CLOCK: [2016-08-24 Wed 16:32]--[2016-08-24 Wed 16:32] =>  0:00

** DONE [#C] const char * name="zgq";  error: *name="change" correct:name="dd  char* const name="zgq" error:name="change" :NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 17:11]--[2016-08-24 Wed 17:11] =>  0:00
CLOCK: [2016-08-24 Wed 17:08]--[2016-08-24 Wed 17:09] =>  0:01
CLOCK: [2016-08-24 Wed 16:42]--[2016-08-24 Wed 17:08] =>  0:26

* Browser
** DONE [#C] i to enter Ignore Mode in vimfx                          :NOTE:
CLOSED: [2016-10-08 Sat 14:33]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:33]
CLOCK: [2016-07-26 Tue 10:42]--[2016-07-26 Tue 10:43] =>  0:01
** DONE [#C] The /etc/fstab file can be used to define how disk partitions, various other block devices, or remote filesystems should be mounted into the filesystem. :NOTE:
CLOSED: [2016-10-08 Sat 14:33]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:33]
CLOCK: [2016-07-26 Tue 14:18]--[2016-07-26 Tue 14:19] =>  0:01
** DONE [#C] Using keysnail                                           :NOTE:
CLOSED: [2016-10-08 Sat 15:00]
CLOCK: [2016-08-02 Tue 15:33]--[2016-08-02 Tue 15:34] =>  0:01
** DONE [#C] press / in help page to search shortcut                  :NOTE:
CLOSED: [2016-10-08 Sat 15:01]
CLOCK: [2016-08-03 Wed 09:33]--[2016-08-03 Wed 09:33] =>  0:00
** DONE [#C] F  to open a link new newly created tab                  :NOTE:
CLOSED: [2016-10-08 Sat 15:01]
CLOCK: [2016-08-03 Wed 09:33]--[2016-08-03 Wed 09:34] =>  0:01
** DONE [#C] ? to show help dialog                                    :NOTE:
CLOSED: [2016-10-08 Sat 15:04]
CLOCK: [2016-08-04 Thu 12:32]--[2016-08-04 Thu 12:33] =>  0:01
** DONE [#C] Using ] to go next page vimfx                            :NOTE:
CLOSED: [2016-10-08 Sat 15:36]
CLOCK: [2016-08-23 Tue 14:00]--[2016-08-23 Tue 14:00] =>  0:00
** DONE [#C] C-S-y  go download page firefox                          :NOTE:
CLOSED: [2016-10-08 Sat 20:35]
CLOCK: [2016-08-25 Thu 16:32]--[2016-08-25 Thu 16:33] =>  0:01
** DONE [#C] yy insteads of C-l C-w  in firefox                       :NOTE:
CLOSED: [2016-10-08 Sat 20:36]
CLOCK: [2016-08-25 Thu 18:38]--[2016-08-25 Thu 18:38] =>  0:00
** DONE [#C] gx$ close right tabs                                     :NOTE:
CLOSED: [2016-10-08 Sat 22:49]
CLOCK: [2016-09-11 Sun 20:57]--[2016-09-11 Sun 20:57] =>  0:00
** DONE [#C] Disable Prefix Argument Keys keysnail                    :NOTE:
CLOSED: [2016-10-09 Sun 01:08]
CLOCK: [2016-09-30 Fri 06:37]--[2016-09-30 Fri 06:37] =>  0:00
* Window manager
** DONE [#C] Hide border                               :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 14:16]
CLOCK: [2016-07-22 Fri 21:39]--[2016-07-22 Fri 21:40] =>  0:01
** DONE [#C] Hide bar then press modifer to show it    :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 14:16]
** DONE [#C] Back and forth                            :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 14:17]
** DONE [#C] Automatic back-and-forth when switching to the current workspace :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 19:33]
CLOCK: [2016-08-25 Thu 13:12]--[2016-08-25 Thu 13:12] =>  0:00
For instance: Assume you are on workspace "1: www" and switch to "2: IM" using mod+2 because somebody sent you a message. You don’t need to remember where you came from now, you can just press $mod+2 again to switch back to "1: www".
** DONE [#C] $mod+Shift+num move window to workspace                  :NOTE:
CLOSED: [2016-10-08 Sat 20:51]
CLOCK: [2016-08-26 Fri 21:14]--[2016-08-26 Fri 21:14] =>  0:00

** DONE [#C] assign [class="idea"] → 4   let window of idea to move to workspace 4 i3 :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 20:51]
CLOCK: [2016-08-26 Fri 21:35]--[2016-08-26 Fri 21:36] =>  0:01
** DONE [#C] $mod+enter to launch terminal             :WINDOW_MANAGER:NOTE:
CLOSED: [2016-10-08 Sat 20:52]
CLOCK: [2016-08-26 Fri 21:40]--[2016-08-26 Fri 21:41] =>  0:01
** DONE [#C] Using i3 layout                                          :NOTE:
CLOSED: [2016-10-09 Sun 00:45]
CLOCK: [2016-09-18 Sun 00:12]--[2016-09-18 Sun 00:13] =>  0:01
* Learn method
** DONE [#C] using other word to express as one word be used many times,you can google or baidu for new word :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-17 Sun 22:11]--[2016-07-17 Sun 22:12] =>  0:01
** DONE [#C] record all things you think                              :NOTE:
CLOSED: [2016-10-08 Sat 15:08]
CLOCK: [2016-08-05 Fri 23:02]--[2016-08-05 Fri 23:04] =>  0:02
** DONE [#C] Why english is so important?                             :NOTE:
CLOSED: [2016-10-08 Sat 19:15]
CLOCK: [2016-08-25 Thu 09:39]--[2016-08-25 Thu 09:45] =>  0:06
As a developer,it is neccessary to have awesome skill of reading and writing english as we need to communicate with foreigner.
** DONE [#C] Don't use lib                                            :NOTE:
CLOSED: [2016-10-08 Sat 21:27]
CLOCK: [2016-08-28 Sun 22:17]--[2016-08-28 Sun 22:18] =>  0:01

** DONE [#C] Don't close door and make own car                        :NOTE:
CLOSED: [2016-10-08 Sat 21:40]
CLOCK: [2016-09-08 Thu 16:22]--[2016-09-08 Thu 16:22] =>  0:00
** DONE [#C] Record the regex that i don't how to write.              :NOTE:
CLOSED: [2016-10-08 Sat 22:50]
CLOCK: [2016-09-12 Mon 11:25]--[2016-09-12 Mon 11:25] =>  0:00
** DONE [#C] Learning what is common                                  :NOTE:
CLOSED: [2016-10-09 Sun 00:46]
CLOCK: [2016-09-19 Mon 22:04]--[2016-09-19 Mon 22:10] =>  0:06
What is common?This is a great problem,as you known,there are a sea of knowledage of computer science.
we will face some common problems such as encode when learning lots of program languages,therefore,those problem 
is common,we need to pay more attention to it.

* Debug
** Conditional breakpoint                                             :NOTE:
CLOCK: [2016-07-15 Fri 21:40]--[2016-07-15 Fri 21:41] =>  0:01
* Emacs
** DONE Using intern convert string to symbol                         :NOTE:
CLOSED: [2016-09-30 Fri 07:53]
** DONE C-\ switch to input method  in  emacs                         :NOTE:
CLOSED: [2016-10-08 Sat 01:36]
CLOCK: [2016-07-11 Mon 11:54]--[2016-07-11 Mon 11:55] =>  0:01
** DONE Copy region or line using avy                                 :NOTE:
CLOSED: [2016-10-08 Sat 01:46]
CLOCK: [2016-07-15 Fri 10:53]--[2016-07-15 Fri 10:54] =>  0:01
** DONE [#C] Goto line  ace-jump                                      :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
** DONE [#C] Ace link (plugin) emacs                                  :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
** DONE [#C] tuple is similar to array                                :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-17 Sun 22:08]--[2016-07-17 Sun 22:10] =>  0:02
** DONE [#C]  Using C-m represent RET in multiple cursors mode
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
            :NOTE:
CLOCK: [2016-07-17 Sun 22:36]--[2016-07-17 Sun 22:37] =>  0:01
** DONE [#C] ace-jump-buffer emace plugin                             :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-17 Sun 22:46]--[2016-07-17 Sun 22:47] =>  0:01
** DONE [#C] c-x c-c exit emacs                                :EDITOR:NOTE:
CLOSED: [2016-10-08 Sat 15:11]
CLOCK: [2016-08-07 Sun 15:31]--[2016-08-07 Sun 15:31] =>  0:00
** DONE [#C] Using hook                                               :NOTE:
CLOSED: [2016-10-09 Sun 01:07]
CLOCK: [2016-09-29 Thu 19:45]--[2016-09-29 Thu 19:49] =>  0:04
** DONE [#C] C-M-k to kill expression   emacs                         :NOTE:
CLOSED: [2016-10-09 Sun 01:07]
CLOCK: [2016-09-29 Thu 21:26]--[2016-09-29 Thu 21:27] =>  0:01
* Intellij IDEA
** DONE Alt+9 show tool window for version control 			       :NOTE:								       CLOCK: [2016-07-07 Thu 09:15]--[2016-07-07 Thu 09:17] =>  0:02
CLOSED: [2016-09-30 Fri 07:53]
** DONE Ctrl+shift+enter complete brace in idea                       :NOTE:
CLOSED: [2016-09-30 Fri 08:09]
								       CLOCK: [2016-07-07 Thu 13:44]--[2016-07-07 Thu 13:52] =>  0:08

** DONE [#C] https://blog.jetbrains.com/idea/2006/07/surround-with/
CLOSED: [2016-09-30 Fri 08:10]
 [2016-07-08 Fri 12:52]
** DONE [#C] http://idea.lanyus.com/ active idea                      :NOTE:
CLOSED: [2016-10-08 Sat 15:22]
CLOCK: [2016-08-08 Mon 16:16]--[2016-08-08 Mon 16:17] =>  0:01
** DONE [#C] alt+1 close project view                    :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 15:23]
CLOCK: [2016-08-08 Mon 16:25]--[2016-08-08 Mon 16:26] =>  0:01
** DONE [#C] vnoremap <Space>na :<C-u>action NewClass<CR>  mapping command in visual mode :NOTE:
CLOSED: [2016-10-08 Sat 15:23]
CLOCK: [2016-08-08 Mon 18:11]--[2016-08-08 Mon 18:12] =>  0:01
CLOCK: [2016-08-08 Mon 17:33]--[2016-08-08 Mon 18:07] =>  0:34
CLOCK: [2016-08-08 Mon 17:25]--[2016-08-08 Mon 17:33] =>  0:08
** DONE [#C] Live template of interllij  sout for System.out.println  :NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 20:29]--[2016-08-24 Wed 20:30] =>  0:01
** DONE [#C] Alt+enter to fix bug quickly                :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 23:22]--[2016-08-24 Wed 23:22] =>  0:00
** DONE [#C] alt+; to comment line                       :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:13]
CLOCK: [2016-08-24 Wed 23:28]--[2016-08-24 Wed 23:29] =>  0:01
** DONE [#C] instead of input of if(isPrefix){ , input isPrefix.if posfix completion :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-24 Wed 23:34]--[2016-08-24 Wed 23:35] =>  0:01
** DONE [#C] Extract variable idea will execute refactor action at cusor location :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-24 Wed 23:48]--[2016-08-24 Wed 23:52] =>  0:04
** DONE [#C] Go to definition                            :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-24 Wed 23:57]--[2016-08-24 Wed 23:57] =>  0:00
** DONE [#C] S-RET  move cursor to next line             :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:14]
CLOCK: [2016-08-25 Thu 00:13]--[2016-08-25 Thu 00:14] =>  0:01
** DONE [#C] OptimizeImports                             :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:15]
CLOCK: [2016-08-25 Thu 10:04]--[2016-08-25 Thu 10:04] =>  0:00
** DONE [#C] ShowProjectStructureSettings           :INTELLIJIDEA:JAVA:NOTE:
CLOSED: [2016-10-08 Sat 19:16]
CLOCK: [2016-08-25 Thu 10:30]--[2016-08-25 Thu 10:31] =>  0:01
** DONE [#C] Navigate class                              :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 19:27]
CLOCK: [2016-08-25 Thu 12:45]--[2016-08-25 Thu 12:46] =>  0:01
** DONE [#C] robot.return instead of return robot;       :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 20:35]
CLOCK: [2016-08-25 Thu 15:17]--[2016-08-25 Thu 15:17] =>  0:00
** DONE [#C] Extract method                              :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 20:35]
CLOCK: [2016-08-25 Thu 16:29]--[2016-08-25 Thu 16:29] =>  0:00
** DONE [#C] psf instead of public static final          :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 20:37]
CLOCK: [2016-08-25 Thu 20:23]--[2016-08-25 Thu 20:24] =>  0:01
** DONE [#C] Using / to find method  is faster           :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 21:35]
CLOCK: [2016-09-06 Tue 21:43]--[2016-09-06 Tue 21:43] =>  0:00
** DONE l.a could match list.add method       idea       :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-09 Sun 01:09]
CLOCK: [2016-10-01 Sat 18:15]--[2016-10-01 Sat 18:16] =>  0:01
* Org-mode
** DONE Using [0%] to statistics development                          :NOTE:
CLOSED: [2016-09-29 Thu 07:44]
   CLOCK: [2016-07-01 Fri 23:44]--[2016-07-01 Fri 23:46] =>  0:02
   Locate cursor to [%] ,then press ctrl+c ctrl+c to update progress.
** DONE [#C] alt+enter  to create new item  of sequence in org-mode   :NOTE:
CLOSED: [2016-10-08 Sat 15:32]
CLOCK: [2016-08-21 Sun 18:39]--[2016-08-21 Sun 18:41] =>  0:02
** DONE [#C] t instead of c-c c-t in org-agenda-mode                  :NOTE:
CLOSED: [2016-10-08 Sat 22:48]
CLOCK: [2016-09-11 Sun 15:20]--[2016-09-11 Sun 15:20] =>  0:00
** DONE [#C] org-todo-list to show global todo list  org-mode         :NOTE:
CLOSED: [2016-10-09 Sun 00:43]
CLOCK: [2016-09-16 Fri 14:20]--[2016-09-16 Fri 14:20] =>  0:00
** DONE [#C] C-c a t instead of org-todo-list                         :NOTE:
CLOSED: [2016-10-09 Sun 00:43]
CLOCK: [2016-09-16 Fri 14:39]--[2016-09-16 Fri 14:39] =>  0:00
** DONE [#C] org mode @ to take a note ! take a time                  :NOTE:
CLOSED: [2016-10-09 Sun 00:50]
CLOCK: [2016-09-24 Sat 19:32]--[2016-09-24 Sat 19:42] =>  0:10
** DONE [#C] c-c c-n go to next heading c-c c-p go to  previous heading :ORG-MODE:NOTE:
CLOSED: [2016-10-09 Sun 00:51]
CLOCK: [2016-09-25 Sun 00:18]--[2016-09-25 Sun 00:19] =>  0:01
* Editor
** DONE Jump to definition                                            :NOTE:
CLOSED: [2016-10-08 Sat 01:41]
CLOCK: [2016-07-14 Thu 14:17]--[2016-07-14 Thu 14:18] =>  0:01
** DONE Format code                                                   :NOTE:
CLOSED: [2016-10-08 Sat 01:43]
CLOCK: [2016-07-14 Thu 14:21]--[2016-07-14 Thu 14:22] =>  0:01
** DONE Open a new line up or down                                    :NOTE:
CLOSED: [2016-10-08 Sat 01:44]
** Quick fix                                                          :NOTE:
CLOCK: [2016-07-15 Fri 12:07]--[2016-07-15 Fri 12:08] =>  0:01
** DONE [#C] Optimize import                                          :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
** DONE [#C] Using search nagivate rather than having page down util you see it. :NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-20 Wed 20:56]--[2016-07-20 Wed 20:57] =>  0:01
** DONE [#C] To adjust indent pressing tab                     :EDITOR:NOTE:
CLOSED: [2016-10-08 Sat 14:00]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:00]
CLOCK: [2016-07-21 Thu 18:38]--[2016-07-21 Thu 18:41] =>  0:03
** DONE [#C] Insert space   to reduce candidate          :INTEllIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 14:15]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:15]
CLOCK: [2016-07-21 Thu 23:02]--[2016-07-21 Thu 23:07] =>  0:05
** DONE [#C] Using tag  to search function definition because directly searching source will result in a number of usage of the function found :NOTE:
CLOSED: [2016-10-08 Sat 15:22]
CLOCK: [2016-08-08 Mon 10:39]--[2016-08-08 Mon 10:40] =>  0:01
** DONE [#C] Using tab instead of C-d or C-backspace to align code :INTELLIJIDEA:NOTE:
CLOSED: [2016-10-08 Sat 15:29]
** DONE [#C] generally speaking enter is for confirm in common program. :NOTE:
CLOSED: [2016-10-08 Sat 15:30]
CLOCK: [2016-08-08 Mon 21:11]--[2016-08-08 Mon 21:11] =>  0:00
** DONE [#C] firefox certificate fix try to delete cert8.db   :PROBLEM:NOTE:
CLOSED: [2016-10-08 Sat 15:31]
CLOCK: [2016-08-09 Tue 21:03]--[2016-08-09 Tue 21:04] =>  0:01
** DONE [#C] Ctrl+s is better than pressing alt+b or alt+f many times repeatly :EDITOR:NOTE:
CLOSED: [2016-10-08 Sat 15:32]
CLOCK: [2016-08-10 Wed 09:33]--[2016-08-10 Wed 09:35] =>  0:02

* Git
** DONE When Git clone, network problem is main one of factors occuring error of packet_write_wait broken pipe :NOTE:
CLOSED: [2016-09-30 Fri 08:20]
CLOCK: [2016-07-08 Fri 20:23]--[2016-07-08 Fri 20:27] =>  0:04

* Python
** DONE u prior to str is equals to str.decode("unicode-escape")      :NOTE:
CLOSED: [2016-10-08 Sat 01:46]
CLOCK: [2016-07-15 Fri 00:03]--[2016-07-15 Fri 00:04] =>  0:01
* English
** DONE pepetuate 报持 长久的                                         :NOTE:
CLOSED: [2016-09-30 Fri 07:52]
   CLOCK: [2016-07-04 Mon 17:19]--[2016-07-04 Mon 17:22] =>  0:03
** DONE gigantic 巨大的                                               :NOTE:
CLOSED: [2016-09-30 Fri 07:52]
   CLOCK: [2016-07-04 Mon 17:23]--[2016-07-04 Mon 17:24] =>  0:01
** DONE [#C] As 做原因状语,主要用来解释                               :NOTE:
CLOSED: [2016-10-08 Sat 14:13]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:13]
Note: Hard links are only valid within the same File System. Symbolic links can span file systems as they are simply the name of another file.
CLOCK: [2016-07-18 Mon 22:42]--[2016-07-18 Mon 22:43] =>  0:01
** DONE [#C] for作目的状语 后接名词 For more advanced requirements    :NOTE:
CLOSED: [2016-10-08 Sat 14:13]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:13]
CLOCK: [2016-07-19 Tue 10:40]--[2016-07-19 Tue 10:41] =>  0:01
** DONE [#C] incarnation 化身                                         :NOTE:
CLOSED: [2016-10-08 Sat 14:17]
** DONE [#C] dating from 自从什么时候                                  :NOTE:
CLOSED: [2016-10-08 Sat 14:22]
- State "DONE"       from "TODO"       [2016-10-08 Sat 14:22]
CLOCK: [2016-07-24 Sun 08:54]--[2016-07-24 Sun 08:55] =>  0:01
** DONE [#C] We use across to emphasise that something is happening at the same time in many places, e.g. within an organisation, a city or a country :NOTE:
CLOSED: [2016-10-08 Sat 21:34]
CLOCK: [2016-09-06 Tue 15:27]--[2016-09-06 Tue 15:28] =>  0:01
    She’s opened coffee shops across the city and they’re very successful.
    Across the country, people are coming out to vote for a new president.                                                       
** DONE [#C] while   have mean of at  the same time                   :NOTE:
CLOSED: [2016-10-08 Sat 21:40]
CLOCK: [2016-09-08 Thu 16:17]--[2016-09-08 Thu 16:18] =>  0:01
** DONE [#C] those of you who 那些                                    :NOTE:
CLOSED: [2016-10-08 Sat 21:41]
CLOCK: [2016-09-08 Thu 21:46]--[2016-09-08 Thu 21:47] =>  0:01
Those of you who have experience running services in production know that usually apps nowadays are not that simple.
** DONE [#C] for 目的                                                 :NOTE:
CLOSED: [2016-10-08 Sat 22:49]
CLOCK: [2016-09-11 Sun 20:36]--[2016-09-11 Sun 20:37] =>  0:01
depart for Japan
** DONE [#C] or 否则                                                  :NOTE:
CLOSED: [2016-10-09 Sun 01:04]
CLOCK: [2016-09-26 Mon 19:31]--[2016-09-26 Mon 19:32] =>  0:01
do not make the critical mistake of specifying only :<remote-branch-name> (with the colon), or the remote branch will be deleted!

* Quick notes
** M-! to input shell command emacs                                    :NOTE:
CLOCK: [2016-10-09 Sun 02:25]--[2016-10-09 Sun 02:25] =>  0:00
** show whitespace https://github.com/ntpeters/vim-better-whitespace :VIM:NOTE:
CLOCK: [2016-10-09 Sun 02:50]--[2016-10-09 Sun 02:50] =>  0:00
** gC to reload config file or modifying config file location vimfx :BROWSER:NOTE:
CLOCK: [2016-10-09 Sun 03:18]--[2016-10-09 Sun 03:18] =>  0:00
** Configure paginate vimfx                                   :BROWSER:NOTE:
CLOCK: [2016-10-09 Sun 11:27]--[2016-10-09 Sun 11:27] =>  0:00
const VIMFX_PREFS = {
  'hints.chars': 'ehstirnoamupcwlfg dy',
  'prevent_autofocus': true,
  'prev_patterns': v => `[上前]\\s*一?\\s*[页张个篇章頁]  ${v}`,
  'next_patterns': v => `[下后]\\s*一?\\s*[页张个篇章頁]  ${v}`,
}
Object.entries(VIMFX_PREFS).forEach(([pref, valueOrFunction]) => {
  const value = typeof valueOrFunction === 'function'
    ? valueOrFunction(vimfx.getDefault(pref))
    : valueOrFunction
  vimfx.set(pref, value)
})
** Restart firefox vimfx                                       :BROWSER:NOTE:
CLOCK: [2016-10-09 Sun 11:45]--[2016-10-09 Sun 11:46] =>  0:01
let map = (shortcuts, command, custom=false) => {
    vimfx.set(`${custom ? 'custom.' : ''}mode.normal.${command}`, shortcuts)
}
vimfx.addCommand({
    name: 'restart',
    description: 'Restart Firefox',
}, ({vim}) => {
    Services.startup.quit(Services.startup.eRestart | Services.startup.eAttemptQuit)
})
map(',R', 'restart', true)
** ipconfig has been obsolete,using the command of ip link show  :NOTE:LINUX:
CLOCK: [2016-10-10 Mon 12:02]--[2016-10-10 Mon 12:03] =>  0:01
** gi to focus the first input browser                         :BROWSER:NOTE:
CLOCK: [2016-10-10 Mon 13:17]--[2016-10-10 Mon 13:19] =>  0:02
** []  go to } the last function   ][ go to } the next function if the cursor is in a function then go to } the current function :VIM:NOTE:
CLOCK: [2016-10-10 Mon 20:53]--[2016-10-10 Mon 20:56] =>  0:03
** prefix+z is useful tmux                                             :NOTE:
CLOCK: [2016-10-11 Tue 00:38]--[2016-10-11 Tue 00:38] =>  0:00

** alias jzsh="tmux switch-client -t config-file:zshrc" quickly switch window of the other session :NOTE:
CLOCK: [2016-10-11 Tue 01:16]--[2016-10-11 Tue 01:16] =>  0:00
** Using org-clock-in to record time of task                           :NOTE:
CLOCK: [2016-10-11 Tue 01:44]--[2016-10-11 Tue 01:44] =>  0:00
** pacman -Qq to print all package of system                    :NOTE:LINUX:
CLOCK: [2016-10-11 Tue 11:52]--[2016-10-11 Tue 11:53] =>  0:01
** Do what is harder to ever.                                          :NOTE:
CLOCK: [2016-10-11 Tue 13:08]--[2016-10-11 Tue 13:08] =>  0:00
** on 表示事件 the screen may flash on resuming from suspend.                                                        :NOTE:
CLOCK: [2016-10-12 Wed 13:44]--[2016-10-12 Wed 13:45] =>  0:01
** enter key to select completion                                      :NOTE:
CLOCK: [2016-10-12 Wed 23:39]--[2016-10-12 Wed 23:39] =>  0:00
** tmux send-keys -t config-file:network.1 C-c '/home/zgq/archlinux/custom-aur/xx-net/src/XX-Net-3.2.6/start' Enter  :NOTE:
CLOCK: [2016-10-13 Thu 00:14]--[2016-10-13 Thu 00:14] =>  0:00
** The golden rule of git rebase is to never use it on public branches.                                                                 :NOTE:
CLOCK: [2016-10-13 Thu 13:02]--[2016-10-13 Thu 13:02] =>  0:00
** << is equals to doLast gradle                                       :NOTE:
CLOCK: [2016-10-13 Thu 14:24]--[2016-10-13 Thu 14:24] =>  0:00
** Make a little progress every day.                                                     :NOTE:
CLOCK: [2016-10-13 Thu 14:26]--[2016-10-13 Thu 14:27] =>  0:01
** Incremental build gradle                                            :NOTE:
CLOCK: [2016-10-13 Thu 19:02]--[2016-10-13 Thu 19:02] =>  0:00
** css" add " arround entire line.                                  :NOTE:
CLOCK: [2016-10-13 Thu 19:41]--[2016-10-13 Thu 19:42] =>  0:01
** n instead of c-n  org agenda                                        :NOTE:
CLOCK: [2016-10-13 Thu 21:07]--[2016-10-13 Thu 21:08] =>  0:01
** o instead of C-l vimfx                                      :BROWSER:NOTE:
CLOCK: [2016-10-13 Thu 21:08]--[2016-10-13 Thu 21:09] =>  0:01
** Bridge pattern seperates abstractions and implements                :NOTE:
CLOCK: [2016-10-14 Fri 01:00]--[2016-10-14 Fri 01:01] =>  0:01
** git push -u origin master  -u set upstream in order to use git push for next time Directly git :NOTE:
CLOCK: [2016-10-14 Fri 01:03]--[2016-10-14 Fri 01:05] =>  0:02
** Using pass to manage password                                       :NOTE:
CLOCK: [2016-10-14 五 23:05]--[2016-10-14 五 23:06] =>  0:01
** The message for the first time of Git commit is Initial commit      :NOTE:
CLOCK: [2016-10-14 五 23:28]--[2016-10-14 五 23:29] =>  0:01
** Learn english is way to improve productivity                        :NOTE:
CLOCK: [2016-10-16 日 03:00]--[2016-10-16 日 03:02] =>  0:02
** Improving history record zsh                                        :NOTE:
CLOCK: [2016-10-16 日 18:08]--[2016-10-16 日 18:08] =>  0:00
# Expand history
setopt hist_expand
# Ignore dups
setopt hist_ignore_dups
# Reduce spaces
setopt hist_reduce_blanks
# Ignore add history if space
setopt hist_ignore_space
** Writing testable code                                               :NOTE:
CLOCK: [2016-10-16 日 22:49]--[2016-10-16 日 22:49] =>  0:00
** gralde {} as a argument :                                        :NOTE:
CLOCK: [2016-10-17 一 00:52]--[2016-10-17 一 00:53] =>  0:01
#+BEGIN_SRC clojure
task hello {
    doLast {
        ant.echo(level: "info", message: "hello from info priority!")
    }
}
#+END_SRC
** Viewing github.com/trending to collect repository                       :NOTE:
CLOCK: [2016-10-17 一 12:57]--[2016-10-17 一 12:57] =>  0:00
** Disable vimfx on github.com                                         :NOTE:
CLOCK: [2016-10-17 一 13:03]--[2016-10-17 一 13:03] =>  0:00
** Dynamic Programming                                                 :NOTE:
CLOCK: [2016-10-17 一 13:18]--[2016-10-17 一 13:18] =>  0:00
** Chain-of-responsibility pattern                                     :NOTE:
CLOCK: [2016-10-17 一 21:28]--[2016-10-17 一 21:29] =>  0:01
** ifn is a useful snippet                                :INTELLIJIDEA:NOTE:
CLOCK: [2016-10-17 一 23:36]--[2016-10-17 一 23:37] =>  0:01
** contentLines.forEach(line->sb.append(line));                        :NOTE:
CLOCK: [2016-10-18 二 01:22]--[2016-10-18 二 01:23] =>  0:01
instead of 
#+BEGIN_SRC java
  for (String str:contentLines){
      sb.append(str);
  }

#+END_SRC
** must install virtualbox-guest-iso package archlinux                 :NOTE:
CLOCK: [2016-10-19 三 23:06]--[2016-10-19 三 23:06] =>  0:00
** Virtualbox doesn't occupy keyboard                                  :NOTE:
CLOCK: [2016-10-20 四 10:57]--[2016-10-20 四 10:58] =>  0:01
** Plug 'junegunn/goyo.vim', { 'on': 'Goyo' } " distraction-free writing                                                                 :NOTE:
CLOCK: [2016-10-20 四 12:08]--[2016-10-20 四 12:08] =>  0:00
** ci' will look up the ' on the current line                     :VIM:NOTE:
CLOCK: [2016-10-20 四 21:54]--[2016-10-20 四 21:58] =>  0:04
** Separate subject from body with a blank line message                :NOTE:
CLOCK: [2016-10-21 五 16:33]--[2016-10-21 五 16:33] =>  0:00
** git show to show content of last commit                      :NOTE:
CLOCK: [2016-10-21 五 16:39]--[2016-10-21 五 16:40] =>  0:01
**  Limit the subject line to 50 characters  git commit                :NOTE:
CLOCK: [2016-10-21 五 16:44]--[2016-10-21 五 16:44] =>  0:00
** Capitalize the subject line  git commit                             :NOTE:
CLOCK: [2016-10-21 五 16:46]--[2016-10-21 五 16:46] =>  0:00
** Do not end the subject line with a period git commit message        :NOTE:
CLOCK: [2016-10-21 五 16:46]--[2016-10-21 五 16:46] =>  0:00
** Use the imperative mood in the subject line git commit message      :NOTE:
CLOCK: [2016-10-21 五 16:48]--[2016-10-21 五 16:48] =>  0:00
** Commit each fix or task as a separate change                                                                 :NOTE:
CLOCK: [2016-10-21 五 17:26]--[2016-10-21 五 17:26] =>  0:00
** Only commit when a block of work is complete git commit             :NOTE:
CLOCK: [2016-10-21 五 17:27]--[2016-10-21 五 17:27] =>  0:00
** Maven autoimport                                                    :NOTE:
CLOCK: [2016-10-22 六 12:18]--[2016-10-22 六 12:18] =>  0:00
** VCS version control system                                           :NOTE:
CLOCK: [2016-10-22 六 13:00]--[2016-10-22 六 13:00] =>  0:00
** Inotify Watches Limit idea                                          :NOTE:
CLOCK: [2016-10-22 六 13:04]--[2016-10-22 六 13:04] =>  0:00
** Add mirror to maven                                                  :NOTE:
CLOCK: [2016-10-22 六 13:16]--[2016-10-22 六 13:17] =>  0:01
    <mirror>
        <id>nexus-aliyun</id>
        <mirrorOf>*</mirrorOf>
        <name>Nexus aliyun</name>
        <url>http://maven.aliyun.com/nexus/content/groups/public</url>
    </mirror> 
** Viewing the Contents of a JAR File jar tf jar-file                                                                :NOTE:
CLOCK: [2016-10-22 六 14:33]--[2016-10-22 六 14:33] =>  0:00
** @ComponentScan be automatically registered as Spring Beans spring boot :NOTE:
CLOCK: [2016-10-22 六 16:08]--[2016-10-22 六 16:08] =>  0:00
** @SpringBootApplication // same as @Configuration @EnableAutoConfiguration @ComponentScan                                                                 :NOTE:
CLOCK: [2016-10-22 六 16:12]--[2016-10-22 六 16:12] =>  0:00
** java -jar to run jar                                                :NOTE:
CLOCK: [2016-10-22 六 16:17]--[2016-10-22 六 16:17] =>  0:00
** liveload refresh page                                               :NOTE:
CLOCK: [2016-10-23 日 13:38]--[2016-10-23 日 13:38] =>  0:00
** Customizing the restart classloader spring boot                     :NOTE:
CLOCK: [2016-10-23 日 13:47]--[2016-10-23 日 13:47] =>  0:00
** sdkman to install  development environment relative to java         :NOTE:
CLOCK: [2016-10-23 日 15:33]--[2016-10-23 日 15:34] =>  0:01
** idea uses local gradle                                               :NOTE:
CLOCK: [2016-10-23 日 19:14]--[2016-10-23 日 19:15] =>  0:01
** include 'awepost-service' in settings.gradle to include subproject  :NOTE:
CLOCK: [2016-10-24 一 21:40]--[2016-10-24 一 21:40] =>  0:00
** allprojects {} subprojects{}  gradle                                 :NOTE:
CLOCK: [2016-10-24 一 23:03]--[2016-10-24 一 23:03] =>  0:00
allprojects {
    task hello << {task -> println "I'm $task.project.name" }
}
** configuration time execution time gradle                             :NOTE:
CLOCK: [2016-10-24 一 23:31]--[2016-10-24 一 23:31] =>  0:00
** C+enter to confirm idea                                             :NOTE:
CLOCK: [2016-10-25 二 13:15]--[2016-10-25 二 13:15] =>  0:00
** Flag source dir and test dir idea                                   :NOTE:
CLOCK: [2016-10-25 二 14:15]--[2016-10-25 二 14:15] =>  0:00
** Profile like dev,prod and test is for loading respective config in different environment :NOTE:
CLOCK: [2016-10-25 二 16:41]--[2016-10-25 二 16:42] =>  0:01
** @Bean is equal to <bean> spring framework                           :NOTE:
CLOCK: [2016-10-26 三 00:51]--[2016-10-26 三 00:52] =>  0:01
** @Configuration is equal to xml file                                 :NOTE:
CLOCK: [2016-10-26 三 00:52]--[2016-10-26 三 00:53] =>  0:01
**  gradle collection                                                  :NOTE:
CLOCK: [2016-10-26 三 00:58]--[2016-10-26 三 00:59] =>  0:01
def javaProjects = [ project(':sagan-site'), project(':sagan-indexer'), project(':sagan-common') ]
def bootProjects = javaProjects - project(':sagan-common')
** External dependencies for the build script                                                                 :NOTE:
CLOCK: [2016-10-26 三 12:20]--[2016-10-26 三 12:20] =>  0:00
buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath group: 'commons-codec', name: 'commons-codec', version: '1.2'
    }
}
** Dependency management will control the versions of your project's direct and transitive dependencies                                              :NOTE:
CLOCK: [2016-10-26 三 13:49]--[2016-10-26 三 13:50] =>  0:01
** linux albert to search github,google quickly                        :NOTE:
CLOCK: [2016-10-26 三 20:40]--[2016-10-26 三 20:41] =>  0:01
** Startup virtualbox using albert                                        :NOTE:
CLOCK: [2016-10-26 三 21:29]--[2016-10-26 三 21:30] =>  0:01
** [p paste up ]p paste below and indent [<space> add new line up ]<space>  add new line down :VIM:NOTE:
CLOCK: [2016-10-27 四 00:05]--[2016-10-27 四 00:07] =>  0:02
** allow for 考虑，所以，导致                                          :NOTE:
CLOCK: [2016-10-27 四 00:08]--[2016-10-27 四 00:09] =>  0:01
** git checkout -b dev create and switch to  a new branch                 :NOTE:
CLOCK: [2016-10-27 四 09:44]--[2016-10-27 四 09:45] =>  0:01
** Automatic restart spring boot                                       :NOTE:
CLOCK: [2016-10-27 四 20:26]--[2016-10-27 四 20:26] =>  0:00
As DevTools monitors classpath resources, the only way to trigger a restart is to update the classpath.
 The way in which you cause the classpath to be updated depends on the IDE that you are using. In Eclipse,
 saving a modified file will cause the classpath to be updated and trigger a restart. In IntelliJ IDEA,
 building the project (Build → Make Project) will have the same effect.
**  Make Project Automactically                          :INTELLIJIDEA:NOTE:
CLOCK: [2016-10-27 四 20:29]--[2016-10-27 四 20:29] =>  0:00
You can also additionally enable ‘Make Project Automatically’ inside IntelliJ IDEA to automatically 
compile your code whenever a file is saved.
**  Computed Properties  vue                                           :NOTE:
CLOCK: [2016-10-29 六 13:11]--[2016-10-29 六 13:11] =>  0:00
var vm = new Vue({
  el: '#example',
  data: {
    message: 'Hello'
  },
  computed: {
    // a computed getter
    reversedMessage: function () {
      // `this` points to the vm instance
      return this.message.split('').reverse().join('')
    }
  }
})
** Template v-for vue                                                  :NOTE:
CLOCK: [2016-10-29 六 13:42]--[2016-10-29 六 13:43] =>  0:01
Similar to template v-if, you can also use a <template> tag with v-for to render a block of multiple elements.
For example:

#+BEGIN_SRC js
  <ul>
    <template v-for="item in items">
      <li>{{ item.msg }}</li>
      <li class="divider"></li>
    </template>
  </ul>
#+END_SRC
** mvvm                                                              :NOTE:
CLOCK: [2016-10-29 六 16:21]--[2016-10-29 六 16:22] =>  0:01
** Single slot vue                                                     :NOTE:
CLOCK: [2016-10-30 日 00:09]--[2016-10-30 日 00:09] =>  0:00
<div>
  <h2>I'm the child title</h2>
  <slot>
    This will only be displayed if there is no content
    to be distributed.
  </slot>
</div>

And a parent that uses the component:

<div>
  <h1>I'm the parent title</h1>
  <my-component>
    <p>This is some original content</p>
    <p>This is some more original content</p>
  </my-component>
</div>

The rendered result will be:

<div>
  <h1>I'm the parent title</h1>
  <div>
    <h2>I'm the child title</h2>
    <p>This is some original content</p>
    <p>This is some more original content</p>
  </div>
</div>
** Slot vue                                                            :NOTE:
CLOCK: [2016-10-30 日 00:24]--[2016-10-30 日 00:24] =>  0:00
Slots allow the external environment to compose the component with extra content.
** Props vue                                                           :NOTE:
CLOCK: [2016-10-30 日 00:24]--[2016-10-30 日 00:24] =>  0:00
Props allow the external environment to pass data into the component
** pacman -Sc to clean the package cache                               :NOTE:
CLOCK: [2016-10-30 日 21:09]--[2016-10-30 日 21:09] =>  0:00
** execute top to view memory usage then press shift+m                 :NOTE:
CLOCK: [2016-10-30 日 21:23]--[2016-10-30 日 21:24] =>  0:01
** Add ignore plugin to idea                             :INTELLIJIDEA:NOTE:
CLOCK: [2016-10-30 日 21:52]--[2016-10-30 日 21:53] =>  0:01
** ) sentence forward                                                  :NOTE:
CLOCK: [2016-10-31 一 20:53]--[2016-10-31 一 20:54] =>  0:01
CLOCK: [2016-10-31 一 22:56]--[2016-10-31 一 22:57] =>  0:01
** posfix completion .cast to cast type                   :INTELLIJIDEA:NOTE:
CLOCK: [2016-11-02 三 21:01]--[2016-11-02 三 21:02] =>  0:01
** posfix complete .field to extract field                             :NOTE:
** C+S+enter to complete more code                        :INTELLIJIDEA:NOTE:
CLOCK: [2016-11-04 五 09:03]--[2016-11-04 五 09:03] =>  0:00
** C-q to view document                                 :INTELLIJIDEA:NOTE:
CLOCK: [2016-11-04 五 19:54]--[2016-11-04 五 19:55] =>  0:01
** rounded border                                                      :NOTE:
CLOCK: [2016-11-05 六 21:53]--[2016-11-05 六 21:53] =>  0:00
** C-f12 to member of class                              :INTELLIJIDEA:NOTE:
CLOCK: [2016-11-06 日 14:44]--[2016-11-06 日 14:45] =>  0:01
** convert -delay 15 -loop 0 *.jpg  anim.gif                           :NOTE:
CLOCK: [2016-11-06 日 20:52]--[2016-11-06 日 20:52] =>  0:00
** ffmpeg -i fasthelper.mkv -r 2 image%d.jpg                           :NOTE:
CLOCK: [2016-11-06 日 20:52]--[2016-11-06 日 20:52] =>  0:00
** Plug annotation = applicationContext.findAnnotationOnBean(s, Plug.class); :NOTE:
CLOCK: [2016-11-08 二 14:32]--[2016-11-08 二 14:33] =>  0:01
** spring ClassPathResource for loading classpath resources               :NOTE:
CLOCK: [2016-11-09 三 13:14]--[2016-11-09 三 13:14] =>  0:00
**  Lock string                                                      :NOTE:
CLOCK: [2016-11-10 四 15:15]--[2016-11-10 四 15:16] =>  0:01
#+BEGIN_SRC java
      protected Object getClassLoadingLock(String className) {
          Object lock = this;
          if (parallelLockMap != null) {
              Object newLock = new Object();
              lock = parallelLockMap.putIfAbsent(className, newLock);
              if (lock == null) {
                  lock = newLock;
              }
          }
          return lock;
      }

#+END_SRC
** gradle -q task name                                                    :NOTE:
CLOCK: [2016-11-10 四 22:11]--[2016-11-10 四 22:12] =>  0:01
**  Gradle Jar task                                                    :NOTE:
CLOCK: [2016-11-12 六 10:12]--[2016-11-12 六 10:13] =>  0:01
#+BEGIN_SRC C 
task searchJar(type: Jar) {
    archiveName = "web-searcher.jar"
    includeEmptyDirs = false
    from sourceSets.main.output.classesDir
    include '**/support/searcher/*'
    from 'build/resources/main'
    include '**/META-INF/**/*.xml'
}
#+END_SRC
** Simplescreenrecorder for linux                                      :NOTE:
CLOCK: [2016-11-12 六 15:36]--[2016-11-12 六 15:36] =>  0:00
** vim delete line of only one char ;                              :VIM:NOTE:
CLOCK: [2016-11-13 日 22:12]--[2016-11-13 日 22:13] =>  0:01
g/^\s*;\s*$/d
** setxkbmap to reset xmodmap                                          :NOTE:
CLOCK: [2016-11-16 三 13:41]--[2016-11-16 三 13:41] =>  0:00
**  i3 back_and_forth                                                  :NOTE:
CLOCK: [2016-11-17 四 15:59]--[2016-11-17 四 15:59] =>  0:00
bindsym $mod+b workspace back_and_forth
** SwingUtilities.invokeLater invokeLaterAndWait                       :NOTE:
CLOCK: [2016-11-18 五 11:02]--[2016-11-18 五 11:02] =>  0:00
** Gateway                                                                :NOTE:
CLOCK: [2016-11-19 六 13:07]--[2016-11-19 六 13:08] =>  0:01
On the Internet, the node that's a stopping point can be a gateway or a host node.
** column like '%searchcontent%'                                       :NOTE:
CLOCK: [2016-11-20 日 16:04]--[2016-11-20 日 16:05] =>  0:01
** conditional breakpoint                                                   :NOTE:
CLOCK: [2016-11-21 一 09:15]--[2016-11-21 一 09:16] =>  0:01
** Writing test is critical                                               :NOTE:
CLOCK: [2016-11-24 四 16:49]--[2016-11-24 四 17:05] =>  0:16
** C-a to incremental number                                      :VIM:NOTE:
CLOCK: [2016-11-25 五 13:56]--[2016-11-25 五 13:56] =>  0:00
** idea alt+j for multiple cursors                                     :NOTE:
CLOCK: [2016-11-26 六 14:48]--[2016-11-26 六 14:48] =>  0:00
**  i3 multiple monitors                                                  :NOTE:
CLOCK: [2016-11-27 日 20:02]--[2016-11-27 日 20:02] =>  0:00
exec --no-startup-id "xrandr --output eDP1 --auto --left-of VGA1"
workspace 1 output VGA1
workspace 2 output VGA1
** set backlight xbacklight -set 30                                    :NOTE:
CLOCK: [2016-11-27 日 20:05]--[2016-11-27 日 20:05] =>  0:00
** A interface only has a mapper,a mapper only has a table mybatis     :NOTE:
CLOCK: [2017-02-19 Sun 21:43]--[2017-02-19 Sun 21:45] =>  0:02
will more clear,method name will not that verbose
** Docker read: connection reset by peer                             :NOTE:
CLOCK: [2017-03-05 日 21:31]--[2017-03-05 日 21:32] =>  0:01
Try more times
** docker must set domestic image                                      :NOTE:
CLOCK: [2017-03-05 日 22:22]--[2017-03-05 日 22:22] =>  0:00
** Run docker command for redis                                        :NOTE:
CLOCK: [2017-03-06 一 16:27]--[2017-03-06 一 16:28] =>  0:01
docker run --name redis -d --restart=always \
  --publish 6379:6379 \
  --volume /srv/docker/redis:/var/lib/redis \
  sameersbn/redis:latest
** VOLUME is used to mount directory                                   :NOTE:
** Use data1 data2 instead of data data2                               :NOTE:
CLOCK: [2017-03-07 二 16:34]--[2017-03-07 二 16:35] =>  0:01
** Store time to mysql,mysql maybe handle it ms                        :NOTE:
CLOCK: [2017-03-07 二 18:43]--[2017-03-07 二 18:44] =>  0:01
** Format json                                                         :NOTE:
CLOCK: [2017-03-08 三 15:00]--[2017-03-08 三 15:00] =>  0:00
echo '{
    "data":
    {"page_num":1, "page_size": 10}}'|jq
** Nutstore prevent zip package                                        :NOTE:
CLOCK: [2017-03-08 三 17:12]--[2017-03-08 三 17:12] =>  0:00
** Don't use spring dependencies management                                   :NOTE:
CLOCK: [2017-03-09 四 09:40]--[2017-03-09 四 09:40] =>  0:00
** RestController("component name")                                    :NOTE:
CLOCK: [2017-03-09 四 11:24]--[2017-03-09 四 11:25] =>  0:01
** alias tips for zsh                                                  :NOTE:
CLOCK: [2017-03-10 五 09:31]--[2017-03-10 五 09:31] =>  0:00
** Fix /usr/local                                                    :NOTE:
CLOCK: [2017-03-10 五 10:25]--[2017-03-10 五 10:25] =>  0:00
sudo chown -R $(whoami) /usr/local/{bin,share}
** fpath for autoloading                                               :NOTE:
CLOCK: [2017-03-10 五 10:26]--[2017-03-10 五 10:26] =>  0:00
** Fix fpath permission                                                :NOTE:
CLOCK: [2017-03-10 五 10:31]--[2017-03-10 五 10:31] =>  0:00
# .zshenv or .zshrc
fpath=( "$HOME/.zfunctions" $fpath )
** jq '.' response > newfile to format json                            :NOTE:
CLOCK: [2017-03-10 五 11:44]--[2017-03-10 五 11:44] =>  0:00
** pipi don't work on same pipe of file                                :NOTE:
CLOCK: [2017-03-10 五 11:56]--[2017-03-10 五 11:56] =>  0:00
** mycli                                                               :NOTE:
CLOCK: [2017-03-10 五 12:22]--[2017-03-10 五 12:22] =>  0:00
** idea tool window float mode                                         :NOTE:
CLOCK: [2017-03-10 五 14:12]jjj
** fast json bug 1.2.10 1.2.20                                         :NOTE:
CLOCK: [2017-03-10 五 19:04]--[2017-03-10 五 19:16] =>  0:12
CLOCK: [2017-03-10 五 19:04]--[2017-03-10 五 19:04] =>  0:00
** Open Data Processing Service， 简称ODPS                                                                 :NOTE:
CLOCK: [2017-03-10 五 19:16]--[2017-03-10 五 19:16] =>  0:00
** Ctrl-b :new -s <name>                                                                  :NOTE:
CLOCK: [2017-03-11 六 11:39]--[2017-03-11 六 11:40] =>  0:01
** vim :Sex                                                            :NOTE:
CLOCK: [2017-03-11 六 12:24]--[2017-03-11 六 12:24] =>  0:00
** python version                                                      :NOTE:
CLOCK: [2017-03-15 三 11:36]--[2017-03-15 三 11:37] =>  0:01
** Jstorm localhost                                                    :NOTE:
CLOCK: [2017-03-15 三 13:00]--[2017-03-15 三 13:00] =>  0:00
** ui node https://github.com/alibaba/jstorm/issues/250                :NOTE:
CLOCK: [2017-03-15 三 13:20]--[2017-03-15 三 13:20] =>  0:00
** Should set foreign key                                              :NOTE:
CLOCK: [2017-03-16 四 14:20]--[2017-03-16 四 14:20] =>  0:00
** page don't use all                                                  :NOTE:
CLOCK: [2017-03-16 四 15:57]--[2017-03-16 四 15:57] =>  0:00
** maven provided only compile don't run                               :NOTE:
CLOCK: [2017-03-17 五 10:49]--[2017-03-17 五 10:49] =>  0:00
** vim J for join                                                      :NOTE:
CLOCK: [2017-03-17 五 12:06]--[2017-03-17 五 12:06] =>  0:00
** Prevent ssh timeout                                                 :NOTE:
CLOCK: [2017-03-17 五 17:27]--[2017-03-17 五 17:28] =>  0:01
** Don't modify source                                                 :NOTE:
CLOCK: [2017-03-17 五 19:45]--[2017-03-17 五 19:45] =>  0:00
** SelectProvider SQL injection                                        :NOTE:
CLOCK: [2017-03-17 五 20:43]--[2017-03-17 五 20:43] =>  0:00
** Why id better than content                                          :NOTE:
CLOCK: [2017-03-17 五 20:55]--[2017-03-17 五 20:55] =>  0:00
** fzf:Alt+c to enter directory                                        :NOTE:
CLOCK: [2017-03-19 日 10:33]--[2017-03-19 日 10:33] =>  0:00
** idea live template                                                 :NOTE:
CLOCK: [2017-03-19 日 11:33]--[2017-03-19 日 11:33] =>  0:00
** Run use logger                                                      :NOTE:
CLOCK: [2017-03-19 日 17:54]--[2017-03-19 日 17:54] =>  0:00
** rs.getDate is real date                                             :NOTE:
CLOCK: [2017-03-20 一 14:20]--[2017-03-20 一 14:20] =>  0:00
** apache RandomStringUtils for test                                   :NOTE:
CLOCK: [2017-03-20 一 18:19]--[2017-03-20 一 18:20] =>  0:01
** Joiner join                                                         :NOTE:
CLOCK: [2017-03-20 一 18:50]--[2017-03-20 一 18:51] =>  0:01
** Why should use code to write integration test                       :NOTE:
CLOCK: [2017-03-21 二 09:45]--[2017-03-21 二 09:46] =>  0:01
** care mybatis cache in test                                          :NOTE:
CLOCK: [2017-03-21 二 11:03]--[2017-03-21 二 11:03] =>  0:00
** polipo for sock convert http                                        :NOTE:
CLOCK: [2017-03-21 二 15:57]--[2017-03-21 二 15:58] =>  0:01
** fuck Properties                                                   :NOTE:
CLOCK: [2017-03-21 二 21:43]--[2017-03-21 二 21:43] =>  0:00
** serialization don't execute constructor                             :NOTE:
CLOCK: [2017-03-22 三 10:11]--[2017-03-22 三 10:12] =>  0:01
** storm bolt or spout constructor only is executed once time          :NOTE:
CLOCK: [2017-03-22 三 16:34]--[2017-03-22 三 16:35] =>  0:01
** [{ to jump to last {                                                :NOTE:
CLOCK: [2017-03-23 四 20:47]--[2017-03-23 四 20:48] =>  0:01
** java8 StringJoiner                                                  :NOTE:
CLOCK: [2017-03-24 五 19:00]--[2017-03-24 五 19:00] =>  0:00
** Use throwable                                                       :NOTE:
CLOCK: [2017-03-25 六 12:22]--[2017-03-25 六 12:22] =>  0:00
** Use ./gradle idea instead of auto generate                          :NOTE:
CLOCK: [2017-03-25 六 13:21]--[2017-03-25 六 13:22] =>  0:01
** Don't use table as argument mybatis                                 :NOTE:
CLOCK: [2017-03-25 六 13:38]--[2017-03-25 六 13:38] =>  0:00
** Git hook                                                            :NOTE:
CLOCK: [2017-03-27 一 09:57]--[2017-03-27 一 09:57] =>  0:00
** jq 'keys' for extracting all keys                                   :NOTE:
CLOCK: [2017-03-27 一 16:22]--[2017-03-27 一 16:22] =>  0:00
** ./gradlew dependencies                                                  :NOTE:
CLOCK: [2017-03-27 一 17:59]--[2017-03-27 一 17:59] =>  0:00
** glg for git log                                                     :NOTE:
CLOCK: [2017-03-28 二 09:30]--[2017-03-28 二 09:30] =>  0:00
** normal! normal                                                      :NOTE:
CLOCK: [2017-03-30 四 22:32]--[2017-03-30 四 22:32] =>  0:00
** gradle publishToMavenLocal                                                                 :NOTE:
CLOCK: [2017-03-31 五 10:26]--[2017-03-31 五 10:26] =>  0:00
** pOPOST<esc>vip:s/^/    / don't work                                 :NOTE:
CLOCK: [2017-03-31 五 14:16]--[2017-03-31 五 14:17] =>  0:01
** lib don't log error                                                 :NOTE:
CLOCK: [2017-03-31 五 17:40]--[2017-03-31 五 17:41] =>  0:01
** git checkout commit file                                            :NOTE:
CLOCK: [2017-03-31 五 21:19]--[2017-03-31 五 21:19] =>  0:00
** Catch throwable instead of exception                                :NOTE:
CLOCK: [2017-04-01 六 14:30]--[2017-04-01 六 14:30] =>  0:00
** Restart docker after upgrade                                        :NOTE:
CLOCK: [2017-04-01 六 20:36]--[2017-04-01 六 20:36] =>  0:00
** git add -u                                                                 :NOTE:
CLOCK: [2017-04-02 Sun 02:52]--[2017-04-02 Sun 02:52] =>  0:00
** alt+1 for tab qq                                                    :NOTE:
CLOCK: [2017-04-02 Sun 03:37]--[2017-04-02 Sun 03:37] =>  0:00
** timedatectl set-ntp true                                            :NOTE:
CLOCK: [2017-04-03 Mon 09:28]--[2017-04-03 Mon 09:29] =>  0:01
** mv -- -NSConflict-zgq.gitignore /tmp                                :NOTE:
CLOCK: [2017-04-03 Mon 10:10]--[2017-04-03 Mon 10:10] =>  0:00
** top -o %MEM                                                         :NOTE:
CLOCK: [2017-04-03 一 16:35]--[2017-04-03 一 16:35] =>  0:00
** mysql Read don't block                                              :NOTE:
CLOCK: [2017-04-03 一 19:03]--[2017-04-03 一 19:04] =>  0:01
** mvn clean install -DskipTests                                                                 :NOTE:
CLOCK: [2017-04-04 Tue 17:19]--[2017-04-04 Tue 17:19] =>  0:00
** ip addr show                                                        :NOTE:
CLOCK: [2017-04-04 Tue 17:19]--[2017-04-04 Tue 17:19] =>  0:00
** globalGrouping                                                      :NOTE:
CLOCK: [2017-04-04 Tue 18:42]--[2017-04-04 Tue 18:42] =>  0:00
** mysql -h localhost -P 3306 --protocol=tcp -u root -pzgqq            :NOTE:
CLOCK: [2017-04-04 Tue 21:25]--[2017-04-04 Tue 21:25] =>  0:00
** Add correct host key in /home/zgq/.ssh/known_hosts to get rid of this message. :NOTE:
CLOCK: [2017-04-05 三 20:45]--[2017-04-05 三 20:45] =>  0:00
** sshpass                                                             :NOTE:
CLOCK: [2017-04-06 四 09:33]--[2017-04-06 四 09:33] =>  0:00
** Json use underline                                                  :NOTE:
CLOCK: [2017-04-06 四 15:24]--[2017-04-06 四 15:24] =>  0:00
** vim :Ag                                                             :NOTE:
CLOCK: [2017-04-06 四 17:46]--[2017-04-06 四 17:46] =>  0:00
** sshpass -p "U_8M50_WbjQfTc5ep" ssh -o StrictHostKeyChecking=no admin@120.26.103.7 -t "cd /tmp; bash --login" :NOTE:
CLOCK: [2017-04-07 五 13:14]--[2017-04-07 五 13:14] =>  0:00
** docker run --name redis -d --restart=always --publish 6379:6379 --volume /docker/redis30:/var/lib/redis redis:3.0 --requirepass zgqq :NOTE:
CLOCK: [2017-04-09 Sun 13:04]--[2017-04-09 Sun 13:04] =>  0:00
** ./gradlew build -x test                                             :NOTE:
CLOCK: [2017-04-09 Sun 13:45]--[2017-04-09 Sun 13:45] =>  0:00
** Run context configuration from editor                               :NOTE:
CLOCK: [2017-04-10 Mon 00:20]--[2017-04-10 Mon 00:21] =>  0:01
** tmux disable confirmation prompt on kill-window                                                                 :NOTE:
CLOCK: [2017-04-10 Mon 00:51]--[2017-04-10 Mon 00:51] =>  0:00
**     tmux switch-client -c /dev/pts/0 -t startup-layout:network      :NOTE:
CLOCK: [2017-04-10 Mon 01:06]--[2017-04-10 Mon 01:06] =>  0:00
** mysqldump -h localhost -P3306 --protocol=tcp -u root -pzgqq --no-data loveshowdb > db.sql :NOTE:
CLOCK: [2017-04-10 一 11:35]--[2017-04-10 一 11:35] =>  0:00
** ./gradlew publishToMavenLocal                                                                 :NOTE:
CLOCK: [2017-04-10 一 22:05]--[2017-04-10 一 22:05] =>  0:00
** Double to long                                                      :NOTE:
CLOCK: [2017-04-11 二 09:42]--[2017-04-11 二 09:42] =>  0:00
** ./deploy.sh $(find /home/admin/release -type f -regex '.*voss.*\.war' | sort -t- -k4 -r | head -n 1); :NOTE:
CLOCK: [2017-04-11 二 14:54]--[2017-04-11 二 14:54] =>  0:00
** git diff myfile.txt                                                                 :NOTE:
CLOCK: [2017-04-11 二 16:56]--[2017-04-11 二 16:56] =>  0:00

** columnObjs := make([]*Column, 0, 200) 		columnObjs = append(columnObjs, col) :NOTE:
CLOCK: [2017-04-15 六 11:54]--[2017-04-15 六 11:55] =>  0:01
** vim C-o for new line above                                          :NOTE:
CLOCK: [2017-04-16 Sun 13:43]--[2017-04-16 Sun 13:43] =>  0:00
** tmux use number to choose session                                   :NOTE:
CLOCK: [2017-04-16 Sun 13:45]--[2017-04-16 Sun 13:45] =>  0:00
